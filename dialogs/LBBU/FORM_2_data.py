import com.ihsan.foundation.appserver as appserver
import com.ihsan.util.modman as modman

# application-level modules, loaded via modman
modman.loadStdModules(globals(), 
  [
    "scripts#form_loaditem"
  ]
)


def FormOnSetDataEx(uideflist, params):
  config = uideflist.config 
  def GetValue(code, period, branches, isrp):
    if code=="()":
      return None
    code = eval(code)
    wClause = ''
    for i in range(len(code)):
      if i>0: 
        wClause+= " or "
      wClause+= "account_code like '%s" % (code[i])
      wClause+= "%'"
    wClause+= ' and branch_code in (%s)' % branches
    if isrp:
      wClause+= " and currency_code = 'IDR'"
    else:
      wClause+= " and currency_code <> 'IDR'"
    s = '''
       select sum(balancecumulative) "value" from table(%s(to_date('%s', 'dd-mm-yyyy')))
       where %s
    ''' % (config.MapDBTableName('core.getdailybalanceat'), period, wClause)
    value = config.CreateSQL(s).RawResult.value
    return value
  if params.DatasetCount == 0 or params.GetDataset(0).Structure.StructureName != 'data':
    return
  
  form_loaditem.setData(uideflist, params)
  if uideflist.uipData.Dataset.RecordCount==0:
    coaMap = {
       '10000':'''('101000000010', '101000000020', '101000000030', '101000000040', '101000000050', '101000000060')''',
       '12000':'''('102010000001', '102010000002', '102010000003', '102020000001', '102030000001', '102040000009')''',      
       '13000':'''('103010100010', '103010200010', '103020100010', '103020200010', 
                   '103030100010', '103030200010', '103030300039', '103060100010', '103060400010', '105010800010')''',
       '14000':'''('103050110010', '103050110020', '103050110039', '103050120010', '103050120020', '103050120039', 
           '103050130010', '103050130020', '103050130039', '103050210010', '103050210020', '103050210039', 
           '103050220010', '103050220020', '103050220039', '103050230010', '103050230020', '103050230039', 
           '103060500039', '105010200010', '105010400010', '105010400020', '105010500010', '105010500020', 
           '105010600010', '105010600020', '105010800020', '105010800030', '105020100010', '105020100020', 
           '105020600003', '105020600004')''',
       '19000':'''('107030000039',)''',
       '15100':'''('108010110001', '108010110011', '108010120001', '108010120011', '108010130001', '108010130011', 
           '108010210001', '108010210011', '108010220001', '108010220011', '108010230001', '108010230011', 
           '108010300001', '108010300011')''',
       '15200':'''('108020110001', '108020110011', '108020120001', '108020120011', '108020130001', '108020130011', 
           '108020210001', '108020210011', '108020220001', '108020220011', '108020230001', '108020230011', 
           '108020300001', '108020300011', '108020300026')''',
       '15400':'''('108030110001', '108030110011', '108030120001', '108030120011', '108030130001', '108030130011', 
           '108030210001', '108030210011', '108030220001', '108030220011', '108030230001', '108030230011', 
           '108030300001', '108030300011')''',
       '15500':'''('108040110001', '108040110011', '108040120001', '108040120011', '108040130001', '108040130011', 
           '108040210001', '108040210011', '108040220001', '108040220011', '108040230001', '108040230011', 
           '108040300001', '108040300011')''',
       '15900':'''('108050110001', '108050110011', '108050120001', '108050120011', '108050130001', '108050130011', 
           '108050210001', '108050210011', '108050220001', '108050220011', '108050230001', '108050230011', 
           '108050300001', '108050300011')''',
       '16100':'''('109010110001', '109010110011', '109010120001', '109010120011', '109010130001', '109010130011', 
           '109010210001', '109010210011', '109010220001', '109010220011', '109010230001', '109010230011', 
           '109010310001', '109010310011', '109010320001', '109010320011', '109010330001', '109010330011')''',
       '16200':'''('109020110001', '109020110011', '109020120001', '109020120011', '109020130001', '109020130011', 
           '109020210001', '109020210011', '109020220001', '109020220011', '109020230001', '109020230011', 
           '109020310001', '109020310011', '109020320001', '109020320011', '109020330001', '109020330011')''',      
       '16900':'''('109030110001', '109030110011', '109030120001', '109030120011', '109030130001', '109030130011', 
           '109030210001', '109030210011', '109030220001', '109030220011', '109030230001', '109030230011')''',
       '18100':'''('110010100001', '110010200001', '110010300001', '110010300002')''',
       '18500':'''('110020100001', '110020200001', '110020200002', '110020300001', '110020300002')''',
       '20500':'''('110030100001', '110030100002', '110030200001', '110030200002', '112010110001', '112010110002', 
           '112010110003', '112010110039', '112010120001', '112010120002', '112010120003', '112010120039', 
           '112010210001', '112010220001', '112010310001', '112010320001', '112010410001', '112010420001', 
           '112010510001', '112010510002', '112010520001', '112010520002', '112010530001', '112010530002', 
           '112010540001', '112010540002', '112010610001', '112010610002', '112010620001', '112010620002', 
           '112010630001', '112010630002', '112010710001', '112010720001', '112020110001', '112020110002', 
           '112020110003', '112020110039', '112020120001', '112020120002', '112020120003', '112020120039', 
           '112020210001', '112020220001', '112020310001', '112020320001', '112020410001', '112020420001', 
           '112020510001', '112020510002', '112020520001', '112020520002', '112020530001', '112020530002', 
           '112020540001', '112020540002', '112020610001', '112020610002', '112020620001', '112020620002', 
           '112020630001', '112020630002', '112020710001', '112020720001')''',
       '20000':'''('111030000039',)''',
       '23000':'''('113010100001', '113010200001', '113010300001', '113010400001', '113020100001', '113020200001', 
           '113020300001', '113020400001', '117010000001', '117010000002', '117010000003', '117010000004', 
           '117010000005', '117010000006', '117010000007', '117020000001', '117020000002', '117020000003', 
           '117020000004', '117020000005', '117020000006', '117020000007', '117030000001', '117030000002', 
           '117030000003', '117030000004', '117030000005', '117030000006', '117030000007', '118010400001', 
           '118020400001', '119000000001', '121040000001', '123000000001', '124010000001', '124010000002', 
           '124020000001', '124020000002', '124030000001', '124040000001', '124050000001', '124060110001', 
           '124060110002', '124060110003', '124060110004', '124060110006', '124060110015', '124060120001', 
           '124060130001', '124060130002', '124060130003', '124060130004', '124060130005', '124060130006', 
           '124060130039', '124070000001', '124080100001', '124080100002', '124080100003', '124080100004', 
           '124080100005', '124080100039', '124080200001', '124080200002', '124080200003', '124080200004', 
           '124080200039', '124080300001', '124080300002', '124080300003', '124080300004', '124080300005', 
           '124080300006', '124080300007', '124080300008', '124080300009', '124080300010', '124080300039', 
           '124090000001', '124090000002', '124110100001', '124110100002', '124110200001', '124110200002', 
           '124110200003', '124110200004', '124110200005', '124110200006', '124110200007', '124110200015', 
           '124110200020', '124110200021', '124110200022', '124110200023', '124110200024', '124110200025', 
           '124110200026', '124110200027', '124110200028', '124110200029', '124110200030', '124110200031', 
           '124110200032', '124110200033', '124110200034', '124110200035', '124110200036', '124110200039', 
           '124110300001', '124110300002', '124110300003', '124110300004', '124110300005', '124110300006', 
           '124110300007', '124110300008', '124110300009', '124110400001', '124110400002', '124110400003', 
           '124110400004', '124110400005', '124110400006', '124110400007', '124110400008', '124110400009', 
           '124110400010', '124110400011', '124110400012', '124110400013', '124110400014', '124110400015', 
           '124110400039', '124110500001', '124110500002', '124110500003', '124110500004', '124110500039', 
           '124110600001', '124110600002', '124110600003', '124110600004', '124110700001', '124110700002', 
           '124110700003', '124110700004', '124110700039')''',
       '21100':'''('115020100001', '115020100002', '115020100003', '115020200009')''',
       '21200':'''('116010110001', '116010120001', '116010130001', '116010210001', '116010220001', '116010230001', 
           '116010230002', '116010240001', '116010250039')''',
       '21300':'''('116020110001', '116020120001', '116020210001', '116020220001', '116020230001', '116020230002', 
           '116020240001')''',
       '22300':'''('120010110001', '120010120010', '120010210010', '120010220010', '120010230010', '120010500001', 
           '120010500002', '120010500003', '120010500004')''',
       '22400':'''('120020110010', '120020110020')''',
       '17000':'''('122090000039',)''',
       '30100':'''('201010000001', '201010000002')''',
       '30200':'''('201020000001',)''',
       '30900':'''('202010000001',)''',
       '32100':'''('202020000001',)''',
       '32200':'''('202030100001', '202030100002', '202030100003', '202030100004', '202030100005', '202030100006', 
           '202030200001', '202030200002', '202030200003', '202030200004', '202030200005', '202030200006')''',
       '34000':'''('203010000001', '203020100001', '203020100002', '203020200001', '203020200002', '203030000001', 
           '203040000001', '203050000039')''',
       '35000':'''('204010000001', '204010000002', '204020000001', '204020000002', '204030000001', '204030000002', 
           '204030000003', '204030000004', '204030000005', '204030000006', '204030000007', '204060000001', 
           '204060000002', '204060000039', '206010100001', '206010100010')''',
       '35500':'''('206010200010', '206010300010', '206010400039', '206020100001', '206020100002', '206020200001', 
           '206020200002', '206020400010', '206020400039')''',
       '36500':'''('207020000001', '212030000001', '212030000002', '212030000003', '212030000004', '212030000005', 
           '212030000006', '212030000007', '212080000001', '212190200001', '212190200003', '212190200004', 
           '212190200005', '212190200039', '212190700028', '212190700029', '212190700030', '212190700031', 
           '212190700032', '212190700033', '212190700034', '212190700035', '212190700036', '212190700037', 
           '212190700038', '212190700039', '212190700040', '212190700049')''',
       '36000':'''('208010600039',)''',
       '37000':'''('209010000001', '209010000002', '209010000003', '209010000039', '209020000001', '209030000002', 
           '209040000002', '209050000002', '209070000039')''',
       '39300':'''('210010110001', '210010120001', '210010210001', '210010220001', '210010230001', '210010700001', 
           '210010700002', '210010700003', '210010700039')''',
       '36501':'''('212010000001', '212010000002', '212010000003', '212010000004', '212010000005', '212010000006', 
           '212010000007', '212010000008', '212010000009', '212010000013', '212010000039')''',
       '40000':'''('212020000001', '212020000002', '212020000003', '212020000004', '212020000005', '212040000001', 
           '212060000001', '212070220001', '212070220002', '212070220003', '212070220039', '212130000001', 
           '212190100001', '212190100002', '212190100003', '212190100004', '212190300001', '212190300002', 
           '212190300003', '212190300004', '212190300005', '212190300006', '212190300007', '212190300008', 
           '212190300009', '212190300039', '212190400001', '212190400002', '212190510001', '212190520001', 
           '212190600001', '212190600002', '212190600003', '212190700001', '212190700002', '212190700003', 
           '212190700004', '212190700005', '212190700006', '212190700007', '212190700008', '212190700009', 
           '212190700010', '212190700011', '212190700012', '212190700013', '212190700014', '212190700015', 
           '212190700016', '212190700017', '212190700018', '212190700019', '212190700020', '212190700021', 
           '212190700022', '212190700023', '212190700024', '212190700025', '212190700026', '212190700027')''',
       '42000':'''('315010000001', '315020000001', '315030000001')''',
       '43100':'''('316010000001',)''',
       '43200':'''('316020000001',)''',
       '43300':'''('316030000001',)''',
       '43400':'''('316040000001',)''',
       '43600':'''('316050000001',)''',
       '43700':'''('316050000002',)''',
       '44500':'''('318000000001', '318000000002')''',
       '45000':'''('319010000001', '319020000001')''',
       '46100':'''('320010100001',)''',
       '46200':'''('320010200001',)''',
       '46500':'''('320020100001',)''',
       '46600':'''('320020200001',)'''
    }
    ckey = coaMap.keys()
    ln=''
    for key in sorted(ckey):
      p = len(eval(coaMap[key]))
      ln += key+':'+str(p)+','
    #raise Exception, ln
    mlu = config.ModLibUtils
    s = '''
      select kode_cabang from branchmember where branch_id=%s
    ''' % (str(params.FirstRecord.branch_id))
    branchmembers = config.CreateSQL(s).RawResult
    listcabang = ''
    while not branchmembers.Eof:
      if listcabang != '':
        listcabang+=', '
      listcabang+=mlu.QuotedStr(branchmembers.kode_cabang)
      branchmembers.Next()
    pid = params.FirstRecord.period_id
    pCode = config.CreateSQL("select period_code from period where period_id=%s" % pid).RawResult.period_code
    week = pCode[6:7]
    bln = pCode[4:6]
    thn = pCode[0:4]
    endmonth = str(mlu.DecodeDate(mlu.IncMonth(mlu.EncodeDate(int(thn),int(bln),1), 1)-1)[2]).zfill(2)
    listtgl = {'1':'07','2':'15','3':'23','4':endmonth}
    tgl = listtgl[week]
    period = "%s-%s-%s" % (tgl,bln,thn)
    ds = uideflist.uipData.Dataset
    s = "select * from %s a, %s b where a.reftype_id=b.reftype_id and b.reference_name='R_POS2_LBBU' order by a.refdata_id" % (
                config.MapDBTableName('enterprise.referencedata'),    
                config.MapDBTableName('enterprise.referencetype')
        )
    res = config.CreateSQL(s).RawResult
    tAktivar1 = 0
    tAktivav1 = 0
    tAktivaj1 = 0
    tAktivar2 = 0
    tAktivav2 = 0
    tAktivaj2 = 0
    tAktivar3 = 0
    tAktivav3 = 0
    tAktivaj3 = 0
    tAktivat = 0
    tPasivar1 = 0    
    tPasivav1 = 0    
    tPasivaj1 = 0    
    tPasivar2 = 0    
    tPasivav2 = 0    
    tPasivaj2 = 0    
    tPasivar3 = 0    
    tPasivav3 = 0    
    tPasivaj3 = 0    
    tPasivat = 0    
    while not res.Eof:
      rec = ds.AddRecord()
      rec.SetFieldByName('LPos.reference_desc', res.reference_desc)    
      rec.SetFieldByName('LPos.reference_code', res.reference_code)    
      rec.SetFieldByName('LPos.refdata_id', res.refdata_id)
      if res.reference_code in coaMap.keys():
        if res.reference_code == '36500':
          value = GetValue(coaMap['36501'], period, listcabang, 1)
          if value not in (None,'',0):
            rp1 = int(value/1000000)
            #rp1 = value
          else:
            rp1 = 0
        else:
          rp1 = 0
        valas1 = 0
        jml1 = rp1+valas1
        value = GetValue(coaMap[res.reference_code], period, listcabang, 1)
        if value not in (None,'',0):
          rp2 = int(value/1000000)
          #rp2 = value
        else:
          rp2 = 0
        valas2 = 0
        jml2 = rp2+valas2
        rp3 = 0
        valas3 = 0
        jml3 = 0
        total = jml1+jml2+jml3
        if int(res.reference_code) < 29000:
          tAktivar1 += rp1
          tAktivav1 += valas1
          tAktivaj1 += jml1
          tAktivar2 += rp2
          tAktivav2 += valas2
          tAktivaj2 += jml2
          tAktivar3 += rp3
          tAktivav3 += valas3
          tAktivaj3 += jml3
          tAktivat += total
        else:
          tPasivar1 += rp1    
          tPasivav1 += valas1    
          tPasivaj1 += jml1    
          tPasivar2 += rp2    
          tPasivav2 += valas2    
          tPasivaj2 += jml2    
          tPasivar3 += rp3    
          tPasivav3 += valas3    
          tPasivaj3 += jml3    
          tPasivat += total    
        rec.PPRupiah = rp1
        rec.PPValas = valas1
        rec.PPJumlah = jml1
        rec.PLRupiah = rp2
        rec.PLValas = valas2
        rec.PLJumlah = jml2
        rec.BPRupiah = rp3
        rec.BPValas = valas3
        rec.BPJumlah = jml3
        rec.Jumlah = total
      elif res.reference_code == '29000':
        rec.PPRupiah = tAktivar1
        rec.PPValas = tAktivav1
        rec.PPJumlah = tAktivaj1
        rec.PLRupiah = tAktivar2
        rec.PLValas = tAktivav2
        rec.PLJumlah = tAktivaj2
        rec.BPRupiah = tAktivar3
        rec.BPValas = tAktivav3
        rec.BPJumlah = tAktivaj3
        rec.Jumlah = tAktivat
      elif res.reference_code == '49000':
        rec.PPRupiah = tPasivar1
        rec.PPValas = tPasivav1
        rec.PPJumlah = tPasivaj1
        rec.PLRupiah = tPasivar2
        rec.PLValas = tPasivav2
        rec.PLJumlah = tPasivaj2
        rec.BPRupiah = tPasivar3
        rec.BPValas = tPasivav3
        rec.BPJumlah = tPasivaj3
        rec.Jumlah = tPasivat
      else:
        pass
      res.Next()
    #--
